


<html>
    <head>
        <script src="/warp.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.js" integrity="sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU=" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/hls.js@latest"></script>


        <style>
        @font-face {
                font-family: 'DINMedium';
                src: url('/fonts/din-medium-webfont.eot');
                src: url('/fonts/din-medium-webfont.eot?iefix') format('eot'),
                    url('/fonts/din-medium-webfont.woff') format('woff'),
                    url('/fonts/din-medium-webfont.ttf') format('truetype'),
                    url('/fonts/din-medium-webfont.svg#webfonteq6wpgx5') format('svg');
                font-weight: normal;
                font-style: normal;
            }

            @font-face {
                font-family: 'DINRegular';
                src: url('/fonts/din-regular-webfont.eot');
                src: url('/fonts/din-regular-webfont.eot?#iefix') format('embedded-opentype'),
                    url('/fonts/din-regular-webfont.woff') format('woff'),
                    url('/fonts/din-regular-webfont.ttf') format('truetype'),
                    url('/fonts/din-regular-webfont.svg#DINRegular') format('svg');
                font-weight: normal;
                font-style: normal;
            }

            body {
                color: black;
                overflow: hidden;
                font-family:'DINRegular', Arial, sans-serif;

            }
            h1, h2, h3, h4, h5 {
                font-family:'DINMedium', Arial, sans-serif;
                font-weight: 800;

            }
            #svg-container {
                position:fixed;
                top:0;
                left:0;
                right:0;
                bottom:0;
                text-align: center;
                z-index: 99996;
                display:none;
            }
            .live {
                height: 200px;
                width:200px;
                right:auto;
                text-align: left;;
            }
            #svg-element {
                width: 100%;
                height: auto;
                max-width: 80%;
                max-height: 80%;
            }
            #player {
                position: fixed;
                bottom:0;
                text-align: center;
                left:0;
                right:0;
                padding-bottom: 20px;
                height: 100px;
                z-index: 99999;
            }
            #video-container {
                position: fixed;
                left: 0;
                top:0;
                right: 0;
                bottom: 0;
                z-index: 99993;

            }
            #video {
                position: fixed;
                left: 0;
                top:0;
                z-index: 99994;
                min-width: 100%;
                min-height: 100%;
                background-size: 100% 100%;
                object-position: 50% 50%; 
                object-fit: cover; 
                width: auto;
                height: auto;
            }
            #cam {
                position: fixed;
                height:100%;
                width: 100%;
                object-fit: cover; 
                object-position: 50% 50%; 
                opacity: 0.1;
                z-index: 99990;
                display: none;
            }
        </style>
       
    </head>
    <body>
        <img id="cam"/>
        <div id="svg-container">
       <%=render 'layouts/htp_logo'%>
       </div>
        <div id="player">
            <audio controls src="https://stream.tubatuba.net/hack-the-planet.mp3" type="audio/mpeg"></audio>
        
        </div>
        <script>
            const svg = document.getElementById('svg-element')
            const warp = new Warp(svg)
        
            warp.interpolate(1000)
            warp.transform(([ x, y ]) => [ x, y, y ])
        
            let offset = 0
            function animate()
            {
                warp.transform(([ x, y, oy ]) => [ x, oy + 4 * Math.sin(x / 8 + offset), oy ])
                offset += 0.02
                window.requestAnimationFrame(animate)
            }
        
            animate()
        </script>
        <style>
            body {
                background-color: black;
                position: fixed;
                top:0;
                left: 0;
                right:0;
                bottom: 0;
                margin:0;
                padding:0;

    -webkit-animation: fadein 8s; /* Safari, Chrome and Opera > 12.1 */
    -moz-animation: fadein 8s; /* Firefox < 16 */
     -ms-animation: fadein 8s; /* Internet Explorer */
      -o-animation: fadein 8s; /* Opera < 12.1 */
         animation: fadein 8s;
            }
          

@keyframes fadein {
    from { opacity: 0; }
    to   { opacity: 1; }
}

/* Firefox < 16 */
@-moz-keyframes fadein {
    from { opacity: 0; }
    to   { opacity: 1; }
}

/* Safari, Chrome and Opera > 12.1 */
@-webkit-keyframes fadein {
    from { opacity: 0; }
    to   { opacity: 1; }
}

/* Internet Explorer */
@-ms-keyframes fadein {
    from { opacity: 0; }
    to   { opacity: 1; }
}

/* Opera < 12.1 */
@-o-keyframes fadein {
    from { opacity: 0; }
    to   { opacity: 1; }
}
        </style>
        <div id="video-container">
<video id="video" autoplay muted></video>

        </div>

        <script>
            var jpegs=[]
            var seconds=0
            var current_jpeg;
            var image_ticks=0;
            var cam = document.getElementById('cam');
            var img_loading=false;
            var live_video=null;
            var busy=false;
            var logo_shown=false;
    
           
            cam.onload = function () {
                img_loading=false;	
            };
            function get_live() {
                if(busy==false) {
                    busy=true;
                    try {
                                            $.getJSON("/live?time="+Math.random()*1000, function(new_live_state, status){
                        busy=false;
                        if(new_live_state!=live_video) {
                            live_video=new_live_state;
                            console.log("[live]",live_video);
                            var video = document.getElementById('video');

                            if(live_video==true) {
                                $("#cam").hide();
                                $("#svg-container").addClass('live');
                                 $("#video-container").fadeIn();

                                if(Hls.isSupported()) {
                                    var hls = new Hls();
                                    hls.loadSource('https://video.tubatuba.net/hack-the-planet/index.m3u8');
                                    hls.attachMedia(video);
                                    hls.on(Hls.Events.MANIFEST_PARSED,function() {
                                    video.play();
                                });
                                }
                                // hls.js is not supported on platforms that do not have Media Source Extensions (MSE) enabled.
                                // When the browser has built-in HLS support (check using `canPlayType`), we can provide an HLS manifest (i.e. .m3u8 URL) directly to the video element throught the `src` property.
                                // This is using the built-in support of the plain video element, without using hls.js.
                                // Note: it would be more normal to wait on the 'canplay' event below however on Safari (where you are most likely to find built-in HLS support) the video.src URL must be on the user-driven
                                // white-list before a 'canplay' event will be emitted; the last video event that can be reliably listened-for when the URL is not on the white-list is 'loadedmetadata'.
                                else if (video.canPlayType('application/vnd.apple.mpegurl')) {
                                    if(isSafari()) {
                                            $("#video-container").html(' <video id="video" src="https://video.tubatuba.net/hack-the-planet/index.m3u8" autoplay muted></video>');

                                    } else {
                                                video.src = 'https://video.tubatuba.net/hack-the-planet/index.m3u8';
                                                                                    video.addEventListener('loadedmetadata',function() {
                                                                                    video.play();
                                                                                    });
                                    }
                                  
                                }
                                
                            
                            } else {
                                console.log("video hide");
                                $("#cam").show();
                                $("#svg-container").removeClass('live');
                                $("#video-container").fadeOut();
                                if(isSafari()) {
                                    $("#video-container").html('');
                                } else {
                                                                    video.pause();

                                }
    
                            }
                            if(logo_shown==false) {
                                logo_shown=true;
                                $("#svg-container").fadeIn();
                            }
                        }
           
    
    
                    })
                    } catch(e) {
                        console.log(e);
                        busy=false;
                    }

                }

            }
            function isSafari() {

            var is_safari = navigator.userAgent.toLowerCase().indexOf('safari/') > -1;
            return is_safari;

            }
            function get_jpegs() {
                $.get("/jpegs", function(data, status){
                    jpegs=data;
                });
            }
            // setInterval(function(){get_jpegs()},10000)
            get_jpegs();
            function refresh_jpeg() {
                seconds=seconds+1;

                if(jpegs.length>0&&live_video==false) {
    
                    image_ticks=image_ticks+1;
                    if(seconds%100==0||current_jpeg==null) {
                        random_jpeg=jpegs[Math.floor(Math.random()*jpegs.length)]
                        current_jpeg=random_jpeg;
                        img_loading=true;
                        cam.src=current_jpeg
                    } else {

                        if(img_loading==false) {
                            img_loading=true;
                            cam.src=current_jpeg+"?uniq="+Math.random()*10000
                        }
                    }
                    
    
                }
            }
            setInterval(function(){get_live()},1000)

            setInterval(function(){refresh_jpeg()},1000)
            refresh_jpeg();
            get_live();
        </script>
    </body>
</html>
