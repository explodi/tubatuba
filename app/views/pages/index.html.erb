


<html>
    <head>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

        <script src="/warp.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.js" integrity="sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU=" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/hls.js@latest"></script>


        <style>
        @font-face {
                font-family: 'DINMedium';
                src: url('/fonts/din-medium-webfont.eot');
                src: url('/fonts/din-medium-webfont.eot?iefix') format('eot'),
                    url('/fonts/din-medium-webfont.woff') format('woff'),
                    url('/fonts/din-medium-webfont.ttf') format('truetype'),
                    url('/fonts/din-medium-webfont.svg#webfonteq6wpgx5') format('svg');
                font-weight: normal;
                font-style: normal;
            }

            @font-face {
                font-family: 'DINRegular';
                src: url('/fonts/din-regular-webfont.eot');
                src: url('/fonts/din-regular-webfont.eot?#iefix') format('embedded-opentype'),
                    url('/fonts/din-regular-webfont.woff') format('woff'),
                    url('/fonts/din-regular-webfont.ttf') format('truetype'),
                    url('/fonts/din-regular-webfont.svg#DINRegular') format('svg');
                font-weight: normal;
                font-style: normal;
            }

            body {
                color: black;
                overflow: hidden;
                font-family:'DINRegular', Arial, sans-serif;

            }
            h1, h2, h3, h4, h5 {
                font-family:'DINMedium', Arial, sans-serif;
                font-weight: 800;

            }
            #svg-container {
                position:fixed;
                top:0;
                left:0;
                right:0;
                bottom:0;
                text-align: center;
                z-index: 99996;
                display:none;
            }
            .live {
                height: 200px;
                width:200px;
                right:auto;
                text-align: left;;
                top:-10px !important;
                left:-40px !important;
            }
            #svg-element {
                width: 100%;
                height: auto;
                max-width: 80%;
                max-height: 80%;
            }
            #player {
                position: fixed;
                bottom:0;
                text-align: center;
                left:0;
                right:0;
                padding-bottom: 20px;
                height: 100px;
                z-index: 99999;
            }
            #video-container {
    position: absolute;
        
                top: -50%;
                left: -50%;
                width: 200%;
                height: 200%;
                z-index: 99993;

            }
            #video {
                position: fixed;
                left: 0;
                top:0;
                z-index: 99994;
                min-width: 100%;
                min-height: 100%;
                background-size: 100% 100%;
                object-position: 50% 50%; 
                object-fit: cover; 
                width: auto;
                height: auto;
                position: absolute;
                top: 0;
                bottom: 0;
                right: 0;
                left: 0;
                margin: auto;
                min-height: 50%;
                min-width: 50%;
            }
            @keyframes flickerAnimation {
  0%   { opacity:0.2; }
  40% { opacity:1; }
  60% { opacity:1; }
  
  100% { opacity:0.2; }
}
@-o-keyframes flickerAnimation{
  0%   { opacity:0.2; }
  40% { opacity:1; }
  60% { opacity:1; }
  
  100% { opacity:0.2; }
}
@-moz-keyframes flickerAnimation{
  0%   { opacity:0.2; }
  40% { opacity:1; }
  60% { opacity:1; }
  
  100% { opacity:0.2; }
}

.animate-flicker {
   -webkit-animation: flickerAnimation 1s infinite;
   -moz-animation: flickerAnimation 1s infinite;
   -o-animation: flickerAnimation 1s infinite;
    animation: flickerAnimation 1s infinite;
}
            #live-indicator {
                display:none;
                position:fixed;
                right:30px;
                top:40px;
                z-index:99999;
                font-size:30px;
                background-color:rgba(255,0,0,0.8);
                color:white;
                font-weight:800;

  transition-timing-function: ease;
  transition-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1);

                   -webkit-animation: flickerAnimation 8s infinite;
   -moz-animation: flickerAnimation 2s infinite;
   -o-animation: flickerAnimation 2s infinite;
    animation: flickerAnimation 2s infinite;

                padding: 10px 8px;
            }
            .cam {
                position: fixed;
                height:140%;
                width: 140%;
                margin-top:-20%;
                margin-left:-20%;
                object-fit: cover;
                object-position: 50% 50%; 
                opacity: 0;
                z-index: 99990;
                  -webkit-animation: hue 600s infinite;
 -webkit-filter: saturate(10);
 	animation: zoominoutsinglefeatured 200s forwards;


            }
            @-webkit-keyframes hue {
  0%, 100%  { -webkit-filter: hue-rotate(0deg); }
  50% { -webkit-filter: hue-rotate(180deg); }
}

@keyframes zoominoutsinglefeatured {
    0% {
        transform: scale(1,1);
    }
    50% {
        transform: scale(1.2,1.2);
    }
    100% {
        transform: scale(1,1);
    }
}
        </style>
       
    </head>
    <body>
        <img id="cam_a" class="cam"/>
        <img id="cam_b" class="cam"/>

        <div id="svg-container">
       <%=render 'layouts/htp_logo'%>
       </div>
        <div id="player">
            <audio controls src="https://stream.tubatuba.net/hack-the-planet.mp3" type="audio/mpeg"></audio>
        
        </div>
        <script>
            const svg = document.getElementById('svg-element')
            const warp = new Warp(svg)
        
            warp.interpolate(1000)
            warp.transform(([ x, y ]) => [ x, y, y ])
        
            let offset = 0
            function animate()
            {
                if (typeof(live_video) !== 'undefined') {

                    if(live_video!=true) {
                        warp.transform(([ x, y, oy ]) => [ x, oy + 4 * Math.sin(x / 8 + offset), oy ])
                        offset += 0.02
                    }
                }
                                        window.requestAnimationFrame(animate)

        
            }
        
            animate()
        </script>
        <style>
            body {
                background-color: black;
                position: fixed;
                top:0;
                left: 0;
                right:0;
                bottom: 0;
                margin:0;
                padding:0;

    -webkit-animation: fadein 8s; /* Safari, Chrome and Opera > 12.1 */
    -moz-animation: fadein 8s; /* Firefox < 16 */
     -ms-animation: fadein 8s; /* Internet Explorer */
      -o-animation: fadein 8s; /* Opera < 12.1 */
         animation: fadein 8s;
            }
          

@keyframes fadein {
    from { opacity: 0; }
    to   { opacity: 1; }
}

/* Firefox < 16 */
@-moz-keyframes fadein {
    from { opacity: 0; }
    to   { opacity: 1; }
}

/* Safari, Chrome and Opera > 12.1 */
@-webkit-keyframes fadein {
    from { opacity: 0; }
    to   { opacity: 1; }
}

/* Internet Explorer */
@-ms-keyframes fadein {
    from { opacity: 0; }
    to   { opacity: 1; }
}

/* Opera < 12.1 */
@-o-keyframes fadein {
    from { opacity: 0; }
    to   { opacity: 1; }
}
        </style>
        <div id="video-container">
    <video id="video" autoplay muted></video>

        </div>
        <div id="live-indicator">
            EN VIVO
        </div>
        <script>
            var jpegs=[]
            var seconds=0
            var current_jpeg;
            var image_ticks=0;
           
           
            var img_loading=false;
            var live_video=null;
            var busy=false;
            var logo_shown=false;
            var hls = new Hls();
            var player_play=false;

            var video = document.getElementById('video');
            if(Hls.isSupported()) {

                hls.attachMedia(video);
            }
            hls.on(Hls.Events.MEDIA_ATTACHED, function () {
                console.log("MEDIA_ATTACHED");

            });
            hls.on(Hls.Events.MANIFEST_PARSED,function() {
                console.log('MANIFEST_PARSED')
                video.play();
            });
              hls.on(Hls.Events.LEVEL_SWITCHED,function() {
                console.log('LEVEL_SWITCHED')
            });
            video.addEventListener('loadedmetadata',function() {
                console.log('loadedmetadata')
                if(Hls.isSupported()) {

                } else {
                    video.play();

                }
            });
            video.addEventListener('play', function() {
                console.log('play')
                player_play=true;
            });
            video.addEventListener('pause', function() {
                console.log('pause')
                player_play=false;
            });
            video.addEventListener('waiting', function() {
                console.log('waiting')
            });
            video.addEventListener('stalled', function() {
                console.log('stalled')
            });
        
            function get_live() {
                
                if(busy==false) {
                    busy=true;
                    $.ajax({url:"/live.json?time="+Math.random()*1000}).done(function(new_live_state){
                        if(new_live_state=="true") new_live_state=true;
                        if(new_live_state=="false") new_live_state=false;
                        if(new_live_state!=live_video) {
                            
                            live_video=new_live_state;
                            console.log("[live]",live_video);

                            if(new_live_state) {
                                 console.log("video show");
                                $("#live-indicator").fadeIn();
                                $("#cam").hide();
                                $("#svg-container").addClass('live');
                                $("#video-container").fadeIn();
                               

                                if(Hls.isSupported()) {
                                    console.log("load source");
                                    hls.loadSource('https://live.tubatuba.net/hack-the-planet/index.m3u8');

                                
                                } else if (video.canPlayType('application/vnd.apple.mpegurl')) {
                                
                                    video.src = 'https://live.tubatuba.net/hack-the-planet/index.m3u8';
                                
                                
                                
                                }
                                
                                
                            
                            } else {
                                $("#live-indicator").fadeOut();

                                console.log("video hide");
                                $("#cam").show();
                                $("#svg-container").removeClass('live');
                                $("#video-container").fadeOut();
                                
                               // video.pause();

                            }
                            if(logo_shown==false) {
                                logo_shown=true;
                                $("#svg-container").fadeIn();
                            }
                        }
                        busy=false;

    
    
                    }).fail(function() {
                        busy=false;
                    });
                 

                }
                if(live_video&&player_play==false) {
                    video.play();
                }

            }
            function isSafari() {

            var is_safari = navigator.userAgent.toLowerCase().indexOf('safari/') > -1;
            return is_safari;

            }
            function get_jpegs() {
                // $.get("/jpegs", function(data, status){
                //     jpegs=data;
                // });
            }
            // setInterval(function(){get_jpegs()},10000)
            get_jpegs();
           
            setInterval(function(){get_live()},1000)

            setInterval(function(){refresh_jpeg()},1000)
            get_live();
        </script>
            <%= javascript_include_tag 'cameras', 'data-turbolinks-track': 'reload' %>

    </body>
</html>
